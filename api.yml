openapi: "3.0.0"
info:
  version: 1.0.0
  title: open-chat
servers:
  - url: http://0.0.0.0:3000/v1
paths:
  /users/hash:
    get:
      summary: get hash
      operationId: get_users_hash
      tags:
        - users
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: object
                required:
                  - hash
                properties:
                  hash:
                    type: string
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /rooms:
    get:
      summary: get rooms
      operationId: get_rooms
      tags:
        - rooms
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Room"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: create a room
      operationId: post_rooms
      tags:
        - rooms
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /rooms/{room_id}/messages:
    get:
      summary: get room messages
      operationId: get_room_messages
      tags:
        - messages
      parameters:
        - in: path
          name: room_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the room
        - in: query
          name: prev_message_id
          schema:
            type: integer
          required: false
          description: Numeric ID of the last message
        - in: query
          name: next_message_id
          schema:
            type: integer
          required: false
          description: Numeric ID of the following message
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: create room messages
      operationId: post_room_messages
      tags:
        - messages
      parameters:
        - in: path
          name: room_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the room
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MessageParam"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /rooms/{room_id}/messages/{message_id}/reactions:
    put:
      summary: put message reaction
      operationId: put_message_reaction
      tags:
        - reactions
      parameters:
        - in: path
          name: room_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the room
        - in: path
          name: message_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the message
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/MessageReactionParam"
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MessageReaction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /reactions:
    get:
      summary: get reactions
      operationId: get_reactions
      tags:
        - reactions
      responses:
        '200':
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Reaction"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Room:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    Message:
      type: object
      required:
        - id
        - user_name
        - user_id
        - content
        - message_reactions
        - created_at
      properties:
        id:
          type: integer
        user_id:
          type: string
        user_name:
          type: string
        message_reactions:
          type: array
          items:
            $ref: "#/components/schemas/MessageReaction"
        content:
          type: string
        created_at:
          type: string
    MessageParam:
      type: object
      required:
        - user_id
        - user_name
        - content
        - content_type
      properties:
        user_id:
          type: string
        user_name:
          type: string
        content:
          type: string
        content_type:
          type: string
    Reaction:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
    MessageReaction:
      type: object
      required:
        - id
        - user_id
        - user_name
        - message_id
        - reaction
      properties:
        id:
          type: integer
        user_id:
          type: string
        user_name:
          type: string
        message_id:
          type: integer
        reaction:
          $ref: "#/components/schemas/Reaction"
    MessageReactionParam:
      type: object
      required:
        - user_id
        - user_name
        - reaction_id
      properties:
        user_id:
          type: string
        user_name:
          type: string
        reaction_id:
          type: integer
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
